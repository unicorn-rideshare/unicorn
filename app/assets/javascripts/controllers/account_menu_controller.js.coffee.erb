module = angular.module('unicornApp.controllers')

module.controller 'AccountMenuCtrl', ['$scope', '$modal', 'authentication', 'Company', 'companyPreference',
  ($scope, $modal, authentication, Company, companyPreference) ->

    $scope.accountMenuOpen = false
    companies = Company.query ->
      $scope.companies = companies
    $scope.requireCompanyRegistration = false
    $scope.requireBillingUpdate = false

    $scope.$watch 'requireCompanyRegistration', ->
      $scope.newCompany() if $scope.requireCompanyRegistration

    $scope.$watch 'requireBillingUpdate', ->
      $scope.editBilling($scope.currentCompany) if $scope.currentCompany && $scope.requireBillingUpdate

    $scope.$watch 'currentUser', ->
      $scope.user = $scope.currentUser
      $scope.requireCompanyRegistration = !$scope.requireCompanyRegistration && $scope.user && !companyPreference.get() && !companyPreference.hasPromptedUser() && !$scope.currentUserIsAdmin && !$scope.currentUserIsCompanyAdmin && !$scope.currentUserIsProvider

    $scope.$watch 'currentCompany', ->
      if $scope.currentCompany
        company = Company.get id: $scope.currentCompany.id, include_stripe_customer: true, ->
          $scope.currentCompany.stripe_customer = company.stripe_customer
          stripeCustomer = $scope.currentCompany.stripe_customer
          hasCard = stripeCustomer && stripeCustomer.sources && stripeCustomer.sources.data && stripeCustomer.sources.data.length > 0
          $scope.requireBillingUpdate = !hasCard
      else
        $scope.requirePartnerRegistration = false
        $scope.requireBillingUpdate = false

    $scope.$watchCollection 'companies', ->
      return unless $scope.companies
      $scope.currentCompany = findCompany(companyPreference.get())

    $scope.$on 'currentCompanyIdChanged', (event, newCompanyId) ->
      $scope.currentCompany = findCompany(newCompanyId)

    editUser = (user) ->
      $modal.open
        templateUrl: '<%= asset_path('users/edit.html') %>',
        controller: 'EditUserModalCtrl',
        size: 'lg',
        resolve:
          user: -> user

    findCompany = (id) ->
      for company in $scope.companies
        return company if company.id.toString() == id.toString()
      null

    editCompany = (company) ->
      $modal.open
        templateUrl: '<%= asset_path('companies/edit.html') %>',
        controller: 'EditCompanyModalCtrl',
        size: 'lg',
        resolve:
          company: -> company

    editBilling = (company) ->
      $modal.open
        templateUrl: '<%= asset_path('payment.html') %>',
        controller: 'PaymentCtrl',
        size: 'md',
        resolve:
          company: -> company

    $scope.selectableCompany = (company) ->
      return true unless $scope.currentCompany
      company.id isnt $scope.currentCompany.id

    $scope.editUser = (user) ->
      editUser(user).result.then undefined, -> user.$get()
      $scope.accountMenuOpen = false

    $scope.newCompany = ->
      company = new Company(contact: {})
      editCompany(company).result.then ->
        $scope.companies.push(company)
        companyPreference.set(company.id)
      $scope.accountMenuOpen = false

    $scope.editBilling = (company) ->
      editBilling(company).result.then undefined, -> company.$get()
      $scope.accountMenuOpen = false

    $scope.editCompany = (company) ->
      editCompany(company).result.then undefined, -> company.$get()
      $scope.accountMenuOpen = false

    $scope.selectCompany = (company) ->
      companyPreference.set(company.id)
      $scope.accountMenuOpen = false

    $scope.logout = ->
      companyPreference.clear() # FIXME-- this will become preferences.delete('company-id')
      authentication.logout()
]
